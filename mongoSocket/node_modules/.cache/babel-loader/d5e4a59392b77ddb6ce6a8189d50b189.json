{"ast":null,"code":"var _jsxFileName = \"/home/pumaguma/Desktop/mongoSocket/client/src/components/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport './chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nfunction Chat() {\n  _s();\n\n  const location = useLocation();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'http://localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    console.log(name);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: e => e.key === 'Enter' ? sendMessage(e) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Chat, \"Bx2nzecC67J9lxRRBpefMy7ZBbs=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/pumaguma/Desktop/mongoSocket/client/src/components/chat/Chat.js"],"names":["React","useState","useEffect","useLocation","queryString","io","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","console","log","emit","error","alert","off","on","sendMessage","event","preventDefault","e","target","value","key"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;;AAGA,IAAIC,MAAJ;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMgB,QAAQ,GAAG,uBAAjB;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAEO,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAAvB;AAEAb,IAAAA,MAAM,GAAGD,EAAE,CAACY,QAAD,CAAX;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AAEAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAIAH,IAAAA,MAAM,CAACgB,IAAP,CAAY,MAAZ,EAAoB;AAAEb,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCY,KAAD,IAAW;AAC7C,UAAGA,KAAH,EAAU;AACRC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAJD;AAMA,WAAO,MAAM;AACTjB,MAAAA,MAAM,CAACgB,IAAP,CAAY,YAAZ;AAEAhB,MAAAA,MAAM,CAACmB,GAAP;AACH,KAJD;AAMD,GAxBM,EAwBJ,CAACR,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAxBI,CAAT;AA0BEjB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACoB,EAAP,CAAU,SAAV,EAAsBb,OAAD,IAAa;AAChCG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;;AAMA,QAAMY,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGhB,OAAH,EAAY;AACVP,MAAAA,MAAM,CAACgB,IAAP,CAAY,aAAZ,EAA2BT,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACD;AACF,GAND;;AAQAM,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAAqBE,QAArB;AAEF,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AACA,QAAA,KAAK,EAAEF,OADP;AAEA,QAAA,QAAQ,EAAGiB,CAAD,IAAOhB,UAAU,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;AAGA,QAAA,UAAU,EAAEF,CAAC,IAAIA,CAAC,CAACG,GAAF,KAAU,OAAV,GAAoBN,WAAW,CAACG,CAAD,CAA/B,GAAqC;AAHtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWH;;GAhEQvB,I;UAEYJ,W;;;KAFZI,I;AAkET,eAAeA,IAAf","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n\nimport './chat.css';\n\n\nlet socket;\n\nfunction Chat() {\n\n    const location = useLocation();\n\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = 'http://localhost:5000';\n    \n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n    \n        socket = io(ENDPOINT);\n\n        console.log(name)\n    \n        setRoom(room);\n        setName(name);\n\n        \n    \n        socket.emit('join', { name, room }, (error) => {\n          if(error) {\n            alert(error);\n          }\n        });\n\n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n\n      }, [ENDPOINT, location.search]);\n\n      useEffect(() => {\n        socket.on('message', (message) => {\n          setMessages([...messages, message])\n        })\n      }, [messages])\n\n      const sendMessage = (event) => {\n        event.preventDefault();\n    \n        if(message) {\n          socket.emit('sendMessage', message, () => setMessage(''));\n        }\n      }\n\n      console.log(message, messages)\n\n    return (\n      <div className=\"outerContainer\">\n        <div className=\"container\">\n            <input \n            value={message} \n            onChange={(e) => setMessage(e.target.value)}\n            onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\n            />\n        </div>\n      </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}